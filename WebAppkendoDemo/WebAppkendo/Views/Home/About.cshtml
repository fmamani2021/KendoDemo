@model WebAppkendo.Models.PersonViewModel
@using Newtonsoft.Json
@{
    ViewBag.Title = "About";
}
<div id="view_about" class="row">
    <br />

    <div class="form-inline">
        <div class="form-group">
            <input type="button" data-role="button" value="New"
                   data-bind="events: { click: actions.onNew }" />
        </div>
        <div class="form-group">
            <input type="button" data-role="button" value="Create"
                   data-bind="events: { click: actions.onCreate }" />
        </div>
        <div class="form-group">
            <input type="button" data-role="button" value="Update"
                   data-bind="events: { click: actions.onEdit }" />
        </div>
    </div>

    <form>
        <div class="row">
            <div class="form-group col-xs-3">
                <label>Name</label>
                <input id="name" type="text"
                       class="form-control"
                       placeholder="Enter Name"
                       data-bind="value: person.Name">
            </div>
            <div class="form-group col-xs-3">
                <label>Last Name</label>
                <input type="text" class="form-control" placeholder="Password"
                       data-bind="value: person.LastName">
            </div>

            <div class="form-group col-xs-3">
                <label>Rol</label>
                <div id="rolIdDOM" class="form-control"
                     style="width: 100%"
                     data-role="dropdownlist"
                     data-bind="value: person.RolId,
                         source: rol.dataSource,
                         events: {close: rol.onClose }"
                     data-value-field="Id"
                     data-text-field="Description"
                     data-value-primitive="true"
                     data-option-label=" ">
                </div>
            </div>

            <div class="form-group col-xs-3">
                <label>Country</label>
                <input style="width: 100%"
                       data-role="autocomplete"
                       data-min-length="2"
                       data-enforce-min-length="true"
                       data-text-field="Description"
                       data-filter="contains"
                       data-bind="value: country.selectedModel,
                           source: country.dataSource,
                           events: { change: country.onChange },
                           enabled: country.isEnabled" />
            </div>

        </div>

        <div class="row">

            <div class="form-group col-xs-3" data-bind="visible: expiredate.isVisible">
                <label>Expire Date</label>
                <input style="width: 100%" data-role="datepicker"
                       data-bind="  value: person.ExpireDate,
                                    events: { change: expiredate.onChange }">
            </div>

            <div class="form-group col-xs-3">
                <div class="checkbox">
                    <label>
                        <input type="checkbox" data-bind="checked : person.Active"> Is Active
                    </label>
                </div>
            </div>

        </div>

    </form>

    <div class="row">

        <div class="form-group col-xs-12">
            <div id="person_grid"
                 data-role="grid"
                 data-bind="source: grid.dataSource, events:{ dataBound: grid.gridDataBound }"
                 data-scrollable="true"
                 data-auto-bind="false"
                 data-column="true"
                 data-navigatable="true"
                 data-selectable="false"
                 data-pageable="{pageSizes: [10, 20, 25]}"
                 data-sortable="false"
                 data-resizable="true"
                 data-columns='[
                        { "field": "Name", "title": "First Name", "width": "100px"  },
                        { "field": "LastName", "title": "Last Name", "width": "100px"  },
                        { "field": "ExpireDate", "title": "Expire Date", format: "{0:MM/dd/yyyy}",  "width": "100px"  },
                        { "field": "CreatedDate", "title": "Created Date", format: "{0:MM/dd/yyyy}",  "width": "100px"  },
                        { "title": "Rol", "width": "100px",
                            "template":kendo.template($("#rolTemplate").html()),
                        },
                        { "field": "CountryDescription", "title": "Country", "width": "100px"  },
                        { "field": "Active", "title": "Active", "width": "100px"  },

                        { "title": "", "width": "200px",
                            "template":kendo.template($("#buttonActionsTemplate").html()),
                            "attributes": { "style": "text-align: center;" }
                        }
                    ]'>
            </div>
        </div>

    </div>

</div>

<script src="~/Scripts/Application/AboutMaintenance.js"></script>
<script>
    let aboutConfig = {
        searchUrl: '@Url.Action("Search", "Home")',
        findUrl: '@Url.Action("Find", "Home")',
        createUrl: '@Url.Action("Create", "Home")',
        updateUrl: '@Url.Action("Update", "Home")',
        deleteUrl: '@Url.Action("Delete", "Home")',
        countriesUrl: '@Url.Action("GetCountries", "Home")',
        newPersonModel: @(Html.Raw(JsonConvert.SerializeObject(Model.Person))),
        listRoles: @(Html.Raw(JsonConvert.SerializeObject(Model.Roles))),
    }

    var aboutMaintenance = new AboutMaintenance(aboutConfig);
    $(function () {
        aboutMaintenance.onReady();
    });

</script>

<script id="buttonActionsTemplate" type="text/x-kendo-template">
    <div class="row">
        <div class="col-xs-2">
            <input  type="button"
                value="Edit"
                data-role="button"
                data-icon="edit"
                data-bind="events: { click: actions.onEditSelected }"
                style="width: 50px" />
        </div>
        #
        var rol = aboutConfig.listRoles.filter(p => p.Id == RolId)[0];
        if(rol && rol.Code && rol.Code != 'ADM'){
        #
        <div class="col-xs-2">
            <input  type="button"
                value="Delete"
                data-role="button"
                data-icon="edit"
                data-bind="events: { click: actions.onDelete }"
                style="width: 50px" />
        </div>
        # } #
    </div>

</script>

<script id="rolTemplate" type="text/x-kendo-template">
    #
    var rol = aboutConfig.listRoles.filter(p => p.Id == data.RolId)[0];
    //console.log(rol)
    //debugger;
    if(rol){
    #
        <label>#= rol.Description #</label>
    #
    }
    #
</script>

